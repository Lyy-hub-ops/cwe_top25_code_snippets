@Override
    public IntValues getValues(String tableName, DownSampling downsampling, long startTB, long endTB, Where where,
                               String valueCName, Function function) throws IOException {
        List<KeyValues> whereKeyValues = where.getKeyValues();
        String op;
        switch (function) {
            case Avg:
                op = "avg";
                break;
            default:
                op = "sum";
        }
        List<String> ids = new ArrayList<>(20);
        StringBuilder whereSql = new StringBuilder();
        if (whereKeyValues.size() > 0) {
            whereSql.append("(");
            for (int i = 0; i < whereKeyValues.size(); i++) {
                if (i != 0) {
                    whereSql.append(" or ");
                }
                KeyValues keyValues = whereKeyValues.get(i);

                StringBuilder valueCollection = new StringBuilder();
                List<String> values = keyValues.getValues();
                for (int valueIdx = 0; valueIdx < values.size(); valueIdx++) {
                    if (valueIdx != 0) {
                        valueCollection.append(",");
                    }
                    String id = values.get(valueIdx);
                    ids.add(id);
                    valueCollection.append("'").append(id).append("'");
                }
                whereSql.append(keyValues.getKey()).append(" in (").append(valueCollection).append(")");
            }
            whereSql.append(") and ");
        }

        IntValues intValues = new IntValues();
        try (Connection connection = h2Client.getConnection()) {
            try (ResultSet resultSet = h2Client.executeQuery(
                connection,
                "select " + Metrics.ENTITY_ID + " id, " + op + "(" + valueCName + ") value from " + tableName + " where " + whereSql + Metrics.TIME_BUCKET + ">= ? and " + Metrics.TIME_BUCKET + "<=?" + " group by " + Metrics.ENTITY_ID,
                startTB, endTB
            )) {

                while (resultSet.next()) {
                    KVInt kv = new KVInt();
                    kv.setId(resultSet.getString("id"));
                    kv.setValue(resultSet.getLong("value"));
                    intValues.addKVInt(kv);
                }
            }
        } catch (SQLException e) {
            throw new IOException(e);
        }
        return intValues;
    }